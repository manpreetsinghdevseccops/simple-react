name: SonarQube Code Quality Analysis

on:
  push:
    branches:
      - main

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up Java (required for Sonar Scanner)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️⃣ Set up Node (optional – only if your project is JS/TS)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      # 4️⃣ Install dependencies (optional)
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          fi

      # 5️⃣ Run tests (optional, for coverage)
      - name: Run tests
        run: |
          npm test --if-present

      # 6️⃣ SonarQube Scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=my_project_key
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # 7️⃣ Quality Gate check (optional but recommended)
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_host_url: ${{ secrets.SONAR_URL }}
